import type {EditorThemeClasses} from 'lexical';

const theme:EditorThemeClasses = {
  ltr: 'ltr',
  rtl: 'rtl',
  heading: {
    h1: 'calliope-h1',
    h2: 'calliope-h2',
    h3: 'calliope-h3',
    h4: 'calliope-h4',
    h5: 'calliope-h5',
    h6: 'calliope-h6',
  },
  hr: 'calliope-hr',
  hrSelected: 'calliope-hr-selected',
  image: 'editor-image',
  inlineImage: 'inline-editor-image',
  indent: 'calliope-indent',
  layoutContainer: 'calliope-layout-container',
  layoutItem: 'calliope-layout-layout-item',
  link: 'editor-link',
  placeholder: 'editor-placeholder',
  paragraph: 'editor-paragraph',
  mark: 'calliope-mark',
  markOverlap: 'calliope-mark-overlap',
  quote: 'calliope-quote',
  code: 'calliope-code',
  blockCursor: 'calliope-block-cursor',
  embedBlock: {
    base: 'calliope-embed-block',
    focus: 'calliope-embed-block-focus',
  },
  codeHighlight: {
    atrule: 'calliope__tokenAttr',
    attr: 'calliope__tokenAttr',
    boolean: 'calliope__tokenProperty',
    builtin: 'calliope__tokenSelector',
    cdata: 'calliope__tokenComment',
    char: 'calliope__tokenSelector',
    class: 'calliope__tokenFunction',
    'class-name': 'calliope__tokenFunction',
    comment: 'calliope__tokenComment',
    constant: 'calliope__tokenProperty',
    deleted: 'calliope__tokenProperty',
    doctype: 'calliope__tokenComment',
    entity: 'calliope__tokenOperator',
    function: 'calliope__tokenFunction',
    important: 'calliope__tokenVariable',
    inserted: 'calliope__tokenSelector',
    keyword: 'calliope__tokenAttr',
    namespace: 'calliope__tokenVariable',
    number: 'calliope__tokenProperty',
    operator: 'calliope__tokenOperator',
    prolog: 'calliope__tokenComment',
    property: 'calliope__tokenProperty',
    punctuation: 'calliope__tokenPunctuation',
    regex: 'calliope__tokenVariable',
    selector: 'calliope__tokenSelector',
    string: 'calliope__tokenSelector',
    symbol: 'calliope__tokenProperty',
    tag: 'calliope__tokenProperty',
    url: 'calliope__tokenOperator',
    variable: 'calliope__tokenVariable',
  },
  tab: 'calliope-tab-node',
  table: 'calliope-table',
  tableAddColumns: 'calliope-table-add-columns',
  tableAddRows: 'calliope-table-add-rows',
  tableAlignment: {
    center: 'calliope-table-alignment-center',
    right: 'calliope-table-alignment-right',
  },
  tableCell: 'calliope-table-cell',
  tableCellActionButton: 'calliope-table-cell-action-button',
  tableCellActionButtonContainer: 'calliope-table-cell-action-button-container',
  tableCellEditing: 'calliope-table-cell-editing',
  tableCellHeader: 'calliope-table-cell-header',
  tableCellPrimarySelected: 'calliope-table-cell-primary-selected',
  tableCellResizer: 'calliope-table-cell-resizer',
  tableCellSelected: 'calliope-table-cell-selected',
  tableFrozenColumn: 'calliope-table-frozen-column',
  tableFrozenRow: 'calliope-table-frozen-row',
  tableCellSortedIndicator: 'calliope-table-cell-sorted-indicator',
  tableResizeRuler: 'calliope-table-cell-resize-ruler',
  tableRowStriping: 'calliope-table-row-stripping',
  tableScrollableWrapper: 'calliope-table-scrollable-wrapper',
  tableSelected: 'calliope-table-selected',
  tableSelection: 'calliope-table-selection',
  text: {
    bold: 'calliope-bold-text',
    capitalize: 'calliope-text-capitalized',
    code: 'calliope-text-code',
    italic: 'calliope-text-italic',
    lowercase: 'calliope-text-lowercased',
    strikethrough: 'calliope-text-strikethrough',
    subscript: 'calliope-subscript',
    superscript: 'calliope-superscript',
    uppercase: 'calliope-text-uppercase',
    underline: 'calliope-underline',
    underlineStrikethrough: 'calliope-underline-strikethrough',
  },
  list: {
    listitem: 'calliope-list-item',
    listitemChecked: 'calliope-list-item-checked',
    listitemUnchecked: 'calliope-list-item-unchecked',
    nested: {
      listitem: 'calliope-nested-list-item',
    },
    olDepth: [
      'calliope-ol1',
      'calliope-ol2',
      'calliope-ol3',
      'calliope-ol4',
      'calliope-ol5',
    ],
    ul: 'calliope-list-unordered',
  },
};

export default theme;
